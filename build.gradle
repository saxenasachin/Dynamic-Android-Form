buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.4.1'
    }
}
apply plugin: 'com.android.library'
apply plugin: 'maven'
apply plugin: 'signing'

repositories {
    google()
    jcenter()
    maven { url 'https://maven.google.com' }
    maven { url "https://jitpack.io" }

}

version "0.4.2"
group = "com.github.dkharrat.nexusdialog"

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        minSdkVersion 19
        targetSdkVersion 28
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    libraryVariants.all { variant ->
        task("generate${variant.name}Javadoc", type: Javadoc) {
            description "Generates Javadoc for $variant.name."
            source = variant.javaCompile.source
            ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
            classpath = files(variant.javaCompile.classpath.files) + files(ext.androidJar)
            exclude '**/R.html', '**/R.*.html', '**/BuildConfig.java'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'com.google.android.material:material:1.1.0-alpha07'

    // Glide - Image loading into ImageView
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    annotationProcessor 'com.github.bumptech.glide:compiler:4.9.0'
    implementation 'com.google.firebase:firebase-core:17.0.0'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.sourceFiles
}

artifacts {
    archives sourcesJar
}

if (project.hasProperty('signing')) {
    signing {
        required { has("release") && gradle.taskGraph.hasTask("uploadArchives") }
        sign configurations.archives
    }
}

if (project.hasProperty('sonatypeUsername')) {
    uploadArchives {
        repositories.mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: sonatypeRepo) {
                authentication(userName: sachinsaxena, password: sachinsaxena)
            }

            pom.project {
                name 'NexusDialog'
                packaging 'aar'
                description 'Simple Form Builder for Android'
                url 'https://github.com/dkharrat/nexus-dialog'

                scm {
                    url 'scm:git@github.com:dkharrat/nexus-dialog.git'
                    connection 'scm:git@github.com:dkharat/nexus-dialog.git'
                    developerConnection 'scm:git@github.com:dkharrat/nexus-dialog.git'
                }

                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution 'repo'
                    }
                }

                developers {
                    developer {
                        id 'dkharrat'
                        name 'Sachin Saxena'
                        email 'sachin.saxena1790@gmail.com'
                    }
                }
            }
        }
    }
}
